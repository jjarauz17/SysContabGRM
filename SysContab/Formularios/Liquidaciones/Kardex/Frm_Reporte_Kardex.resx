<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SimpleButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="SimpleButton2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AItTVQAAAABJRU5ErkJggg==
</value>
  </data>
</root>